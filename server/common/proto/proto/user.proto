syntax = "proto3";

package user;
import "auth.proto";

service UserManage {
  // 创建用户
  rpc CreateUser (CreateUserRequest) returns (UserInfo) {}
  // 用户更新
  rpc UpdateUser (UpdateUserRequest) returns (UserInfo) {}
  // 用户删除
  rpc DeleteUser (DeleteUserRequest) returns (auth.Empty) {}
}


message UpdateUserRequest {
  // 账号
  string name = 1;
  // 描述
  optional string description = 3;
  // 身份验证
  string auth = 2;
}

message DeleteUserRequest {
  // 账号
  string name = 1;
  // 身份验证
  string auth = 2;
}

message CreateUserRequest {
  // 账号
  string name = 1;
  // 密码
  string password = 2;
  // 描述
  optional string description = 3;
  // 身份验证
  string auth = 4;
}


service UserMessage{
  // 用户列表
  rpc ListUser (ListRequest) returns (ListUserReply){}
  // 用户信息
  rpc GetUser(GetUserRequest) returns (UserInfo){}
}

message ListRequest{
  // 获取多少数据
  uint32 limit=1;
  // 偏移量
  uint32 offset=2;
  // 身份验证
  string auth = 3;
}

message ListUserReply{
  // 数据
  repeated UserInfo data=1;
  // 总数
  int64 total =2;
}

message GetUserRequest{
  // 用户名
  string name=1;
  // 身份验证
  string auth = 2;
}


message UserInfo {
  // 账号
  string name = 1;
  // 描述
  optional string description = 3;
  // 创建时间
  int64 createTime = 4;
  // 创建时间
  int64 updateTime = 5;
}

// 用户管理自身
service SelfManage{
  // 修改用户信息
  rpc UpdateUserInfo(UpdateUserInfoRequest) returns (UserInfo){}
  // 获取自身信息
  rpc GetUserInfo(GetUserInfoRequest) returns (UserInfo){}
}

message GetUserInfoRequest{
  // 身份验证
  string auth = 1;
}
message UpdateUserInfoRequest{
  // 描述
  optional string description = 1;
  // 身份验证
  string auth = 2;
}